{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","ToDoList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","concat","then","response","json","isDarkAtom","atom","key","default","Chart","_ref","coinId","isDark","useRecoilValue","_useQuery","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","_jsx","children","ApexChart","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Coin","Title","styled","h1","_templateObject","_taggedTemplateLiteral","props","accentColor","Loader","span","_templateObject2","Container","div","_templateObject3","Header","header","_templateObject4","Overview","_templateObject5","OverviewItem","_templateObject6","Description","p","_templateObject7","Tabs","_templateObject8","Tab","_templateObject9","isActive","textColor","_tickersData$quotes","_tickersData$quotes$U","_tickersData$quotes$U2","_objectDestructuringEmpty","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","_useQuery2","fetchCoinTickers","tickersLoading","tickersData","loading","_jsxs","Helmet","_Fragment","rank","symbol","quotes","USD","description","total_supply","max_supply","Link","to","Switch","Route","path","CoinsList","ul","li","cardBgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","BrowserRouter","darkTheme","bgColor","lightTheme","ToDoList","_useState","useState","_useState2","_slicedToArray","toDo","setToDo","onSubmit","event","preventDefault","console","log","onChange","currentTarget","placeholder","GlobalStyle","createGlobalStyle","App","setIsDark","ThemeProvider","onClick","current","ReactQueryDevtools","initialIsOpen","queryClient","QueryClient","ReactDOM","render","React","StrictMode","RecoilRoot","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.613a108e.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { atom } from 'recoil';\n\nexport const isDarkAtom = atom({\n  key: 'isDark',\n  default: true,\n});\n","import { useQuery } from 'react-query';\nimport { fetchCoinHistory } from '../api';\nimport ApexChart from 'react-apexcharts';\nimport { useRecoilValue } from 'recoil';\nimport { isDarkAtom } from '../atoms';\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    ['ohlcv', coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <ApexChart\n          type='line'\n          series={[\n            {\n              name: 'Price',\n              data: data?.map((price) => price.close) || [],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? 'dark' : 'light',\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: 'transparent',\n            },\n            grid: { show: false },\n            stroke: {\n              curve: 'smooth',\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: 'datetime',\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: 'gradient',\n              gradient: { gradientToColors: ['#0be881'], stops: [0, 100] },\n            },\n            colors: ['#0fbcf9'],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import Coin from './Coin';\n\nconst Price = () => {\n  return (\n    <div>\n      <Coin />\n    </div>\n  );\n};\n\nexport default Price;\n","import { useQuery } from 'react-query';\nimport { Helmet } from 'react-helmet';\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoinInfo, fetchCoinTickers } from '../api';\nimport Chart from './Chart';\nimport Price from './Price';\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinProps {}\n\nfunction Coin({}: ICoinProps) {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch('/:coinId/price');\n  const chartMatch = useRouteMatch('/:coinId/chart');\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from 'react-helmet';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoins } from '../api';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Coin from './routes/Coin';\nimport Coins from './routes/Coins';\n\ninterface IRouterProps {}\n\nfunction Router({}: IRouterProps) {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/:coinId'>\n          <Coin />\n        </Route>\n        <Route path='/'>\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from 'styled-components';\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#2f3640',\n  textColor: 'white',\n  accentColor: '#9c88ff',\n  cardBgColor: 'transparent',\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: 'whitesmoke',\n  textColor: 'black',\n  accentColor: '#9c88ff',\n  cardBgColor: 'white',\n};\n","import React, { useState } from 'react';\n\nfunction ToDoList() {\n  const [toDo, setToDo] = useState('');\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setToDo(value);\n  };\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    console.log(toDo);\n  };\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} value={toDo} placeholder='Write a to do' />\n        <button>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport Router from './Router';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { darkTheme, lightTheme } from './theme';\nimport { useState } from 'react';\nimport ToDoList from './ToDoList';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => setIsDark((current) => !current);\n  return (\n    <>\n      <ToDoList />\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <button onClick={toggleDark}>Dark or light Click me</button>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\n\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}